<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <OutputType>Library</OutputType>
    <LangVersion>6</LangVersion>
    <CodeAnalysisRuleSet>..\QuantConnect.ruleset</CodeAnalysisRuleSet>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
  </PropertyGroup>
  <ItemGroup>
    <Content Include="AccumulativeInsightPortfolioRegressionAlgorithm.py" />
    <Content Include="AddAlphaModelAlgorithm.py" />
    <Content Include="AddRiskManagementAlgorithm.py" />
    <Content Include="AddUniverseSelectionModelAlgorithm.py" />
    <Content Include="Alphas\ContingentClaimsAnalysisDefaultPredictionAlpha.py" />
    <Content Include="Alphas\GasAndCrudeOilEnergyCorrelationAlpha.py" />
    <Content Include="Alphas\GlobalEquityMeanReversionIBSAlpha.py" />
    <Content Include="Alphas\IntradayReversalCurrencyMarketsAlpha.py" />
    <Content Include="Alphas\GreenblattMagicFormulaAlpha.py" />
    <Content Include="Alphas\MeanReversionLunchBreakAlpha.py" />
    <Content Include="Alphas\PriceGapMeanReversionAlpha.py" />
    <Content Include="Alphas\SykesShortMicroCapAlpha.py" />
    <Content Include="Alphas\RebalancingLeveragedETFAlpha.py" />
    <Content Include="Alphas\TriangleExchangeRateArbitrageAlpha.py" />
    <Content Include="Alphas\ShareClassMeanReversionAlpha.py" />
    <Content Include="Alphas\TripleLeverageETFPairVolatilityDecayAlpha.py" />
    <Content Include="Alphas\VIXDualThrustAlpha.py" />
    <Content Include="AltData\CachedAlternativeDataAlgorithm.py" />
    <Content Include="AltData\BenzingaNewsAlgorithm.py" />
    <Content Include="AltData\SECReport8KAlgorithm.py" />
    <Content Include="AltData\SmartInsiderTransactionAlgorithm.py" />
    <Content Include="AltData\USTreasuryYieldCurveRateAlgorithm.py" />
    <Content Include="AltData\TradingEconomicsAlgorithm.py" />
    <Content Include="AltData\TiingoNewsAlgorithm.py" />
    <Content Include="BasicCSharpIntegrationTemplateAlgorithm.py" />
    <Content Include="BasicSetAccountCurrencyAlgorithm.py" />
    <Content Include="BasicTemplateConstituentUniverseAlgorithm.py" />
    <Content Include="BasicTemplateOptionsConsolidationAlgorithm.py" />
    <Content Include="Benchmarks\SECReportBenchmarkAlgorithm.py" />
    <Content Include="Benchmarks\SmartInsiderEventBenchmarkAlgorithm.py" />
    <Content Include="CoarseTiingoNewsUniverseSelectionAlgorithm.py" />
    <Content Include="ConsolidateRegressionAlgorithm.py" />
    <Content Include="CustomConsolidatorRegressionAlgorithm.py" />
    <Content Include="CustomDataAddDataOnSecuritiesChangedRegressionAlgorithm.py" />
    <Content Include="CustomDataAddDataCoarseSelectionRegressionAlgorithm.py" />
    <Content Include="DynamicSecurityDataAlgorithm.py" />
    <Content Include="ConfidenceWeightedFrameworkAlgorithm.py" />
    <Content Include="ExtendedMarketTradingRegressionAlgorithm.py" />
    <Content Include="FineFundamentalFilteredUniverseRegressionAlgorithm.py" />
    <Content Include="KerasNeuralNetworkAlgorithm.py" />
    <Content Include="CustomDataUsingMapFileRegressionAlgorithm.py" />
    <Content Include="LiquidETFUniverseFrameworkAlgorithm.py" />
    <Content Include="ObjectStoreExampleAlgorithm.py" />
    <Content Include="LiveFeaturesAlgorithm.py" />
    <Content Include="PortfolioRebalanceOnCustomFuncRegressionAlgorithm.py" />
    <Content Include="PortfolioRebalanceOnDateRulesRegressionAlgorithm.py" />
    <Content Include="PythonDictionaryFeatureRegressionAlgorithm.py" />
    <Content Include="RegisterIndicatorRegressionAlgorithm.py" />
    <Content Include="SectorWeightingFrameworkAlgorithm.py" />
    <Content Include="SetHoldingsMultipleTargetsRegressionAlgorithm.py" />
    <Content Include="SliceGetByTypeRegressionAlgorithm.py" />
    <Content Include="StringToSymbolImplicitConversionRegressionAlgorithm.py" />
    <Content Include="TalibIndicatorsAlgorithm.py" />
    <Content Include="TradingEconomicsCalendarIndicatorAlgorithm.py" />
    <Content Include="OnEndOfDayRegressionAlgorithm.py" />
    <Content Include="SECReportDataAlgorithm.py" />
    <Content Include="UniverseUnchangedRegressionAlgorithm.py" />
    <Content Include="USEnergyInformationAdministrationAlgorithm.py" />
    <Content Include="Benchmarks\StatefulCoarseUniverseSelectionBenchmark.py" />
    <Content Include="Benchmarks\StatelessCoarseUniverseSelectionBenchmark.py" />
    <Content Include="ConstituentsUniverseRegressionAlgorithm.py" />
    <Content Include="G10CurrencySelectionModelFrameworkAlgorithm.py" />
    <Content Include="ExpiryHelperAlphaModelFrameworkAlgorithm.py" />
    <Content Include="BasicTemplateFuturesFrameworkAlgorithm.py" />
    <Content Include="BasicTemplateOptionsFrameworkAlgorithm.py" />
    <Content Include="InsightWeightingFrameworkAlgorithm.py" />
  </ItemGroup>
  <ItemGroup>
    <None Update="build.sh">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="build.bat">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Algorithm\QuantConnect.Algorithm.csproj" />
    <ProjectReference Include="..\Common\QuantConnect.csproj" />
    <ProjectReference Include="..\Indicators\QuantConnect.Indicators.csproj" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="2.9.3" />
    <PackageReference Include="Microsoft.CodeAnalysis.VersionCheckAnalyzer" Version="2.9.3" />
    <PackageReference Include="Microsoft.CodeQuality.Analyzers" Version="2.9.3" />
    <PackageReference Include="Microsoft.NetCore.Analyzers" Version="2.9.3" />
    <PackageReference Include="Microsoft.NetFramework.Analyzers" Version="2.9.3" />
    <PackageReference Include="Python.Runtime" Version="1.0.0" />
    <PackageReference Include="QuantConnect.pythonnet" Version="1.0.5.30" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="PythonAlgorithm.cs" />
  </ItemGroup>
  <PropertyGroup>
    <IsWindows>false</IsWindows>
    <IsWindows Condition="'$(OS)' == 'Windows_NT'">true</IsWindows>
    <IsOSX>false</IsOSX>
    <IsOSX Condition="'$(IsWindows)' != 'true' AND '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</IsOSX>
    <IsLinux>false</IsLinux>
    <IsLinux Condition="'$(IsWindows)' != 'true' AND '$(IsOSX)' != 'true' AND '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
  </PropertyGroup>
  <Target Name="PrintRID" BeforeTargets="Build">
    <Message Text="IsWindows $(IsWindows)" Importance="high" />
    <Message Text="IsOSX $(IsOSX)" Importance="high" />
    <Message Text="IsLinux $(IsLinux)" Importance="high" />
    <Message Text="ForceLinuxBuild $(ForceLinuxBuild)" Importance="high" />
  </Target>
  <Choose>
    <When Condition="$(IsWindows) AND '$(ForceLinuxBuild)' != 'true'">
      <ItemGroup>
        <Reference Include="Python.Runtime, Version=1.0.5.30, Culture=neutral, processorArchitecture=MSIL">
          <HintPath>..\packages\quantconnect.pythonnet\1.0.5.30\lib\win\Python.Runtime.dll</HintPath>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="$(IsLinux) OR '$(ForceLinuxBuild)' == 'true'">
      <ItemGroup>
        <Reference Include="Python.Runtime, Version=1.0.5.30, Culture=neutral, processorArchitecture=MSIL">
          <HintPath>..\packages\quantconnect.pythonnet\1.0.5.30\lib\linux\Python.Runtime.dll</HintPath>
        </Reference>
      </ItemGroup>
    </When>
    <When Condition="$(IsOSX) AND '$(ForceLinuxBuild)' != 'true'">
      <ItemGroup>
        <Reference Include="Python.Runtime, Version=1.0.5.30, Culture=neutral, processorArchitecture=MSIL">
          <HintPath>..\packages\quantconnect.pythonnet\1.0.5.30\lib\osx\Python.Runtime.dll</HintPath>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <PropertyGroup>
    <PostBuildEvent Condition="'$(OS)' == 'Windows_NT' ">
      build
    </PostBuildEvent>
    <PostBuildEvent Condition="'$(OS)' != 'Windows_NT'">
      ./build.sh
    </PostBuildEvent>
  </PropertyGroup>
</Project>